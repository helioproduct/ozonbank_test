// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package gqlmodel

import (
	"time"
)

type Comment struct {
	ID        string    `json:"id"`
	PostID    string    `json:"postId"`
	ParentID  *string   `json:"parentId,omitempty"`
	UserID    string    `json:"userId"`
	Body      string    `json:"body"`
	CreatedAt time.Time `json:"createdAt"`
}

type CommentConnection struct {
	Edges    []*CommentEdge `json:"edges"`
	Nodes    []*Comment     `json:"nodes"`
	PageInfo *PageInfo      `json:"pageInfo"`
}

type CommentEdge struct {
	Cursor string   `json:"cursor"`
	Node   *Comment `json:"node"`
}

type Mutation struct {
}

type PageInfo struct {
	StartCursor *string `json:"startCursor,omitempty"`
	EndCursor   *string `json:"endCursor,omitempty"`
	HasNextPage bool    `json:"hasNextPage"`
	Count       int     `json:"count"`
}

type PageInput struct {
	Limit  *int    `json:"limit,omitempty"`
	Before *string `json:"before,omitempty"`
	After  *string `json:"after,omitempty"`
}

type Post struct {
	ID              string    `json:"id"`
	Title           string    `json:"title"`
	Body            string    `json:"body"`
	UserID          string    `json:"userId"`
	CommentsEnabled bool      `json:"commentsEnabled"`
	CreatedAt       time.Time `json:"createdAt"`
}

type PostConnection struct {
	Edges    []*PostEdge `json:"edges"`
	Nodes    []*Post     `json:"nodes"`
	PageInfo *PageInfo   `json:"pageInfo"`
}

type PostEdge struct {
	Cursor string `json:"cursor"`
	Node   *Post  `json:"node"`
}

type Query struct {
}

type Subscription struct {
}
